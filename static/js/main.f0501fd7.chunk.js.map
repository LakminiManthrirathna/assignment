{"version":3,"sources":["components/Results.js","images/preloader.gif","components/Pagination.js","App.js","reportWebVitals.js","index.js"],"names":["Results","props","useState","allRepos","setallRepos","allFollowers","setallFollowers","users","User","userid","selectedUserLogin","find","u","id","login","console","log","getUserRepos","a","axios","then","response","data","catch","err","getUserFollowers","className","map","repo","name","f","user","to","src","avatar_url","path","component","match","params","Pagination","usersPerPage","totalUsers","paginate","pageNumbers","i","Math","ceil","push","number","onClick","App","userInput","setUserInput","setError","setUsers","isLoading","setIsLoading","loaded","setLoaded","currentPage","setCurrentPage","handleSubmit","items","indexOfLastPost","indexOfFirstPost","currentUsers","slice","Form","onSubmit","FormGroup","Input","palacholder","onChange","e","target","value","FormButton","content","loadingImage","length","pageNumber","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0501fd7.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport { BrowserRouter as Router, Link, Route} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Results = (props) => {\r\n    const [allRepos, setallRepos]= useState([]);\r\n    const [allFollowers, setallFollowers]= useState([]);\r\n    const {users} = props;\r\n   \r\n    const User = ({userid}) => {\r\n        const selectedUser = users.find(u => u.id == userid);\r\n        const selectedUserLogin= selectedUser.login;\r\n        console.log('selectedUserLogin:'+selectedUserLogin);\r\n        const getUserRepos = async (selectedUserLogin) => {\r\n           const response = await axios(\"https://api.github.com/users/\" + selectedUserLogin+\"/repos\")\r\n           .then((response) => {\r\n                setallRepos(response.data);\r\n           })\r\n           .catch((err) => {\r\n                   console.log(err);\r\n               }\r\n           );\r\n       };\r\n\r\n       const getUserFollowers = async (selectedUserLogin) => {\r\n            const response = await axios(\"https://api.github.com/users/\" + selectedUserLogin+\"/followers\")\r\n            .then((response) => {\r\n                setallFollowers(response.data);\r\n            })\r\n            .catch((err) => {\r\n                    console.log(err);\r\n                }\r\n            );\r\n        };\r\n\r\n       getUserRepos(selectedUserLogin);\r\n       getUserFollowers(selectedUserLogin);\r\n       console.log('AllRepos:'+allRepos);\r\n   \r\n      return(\r\n          <div>\r\n           <div>Repositories:</div>\r\n           <ol className=\"removeBullets\">\r\n                {allRepos.map(repo =>\r\n                    <li className=\"border-1\">\r\n                        {repo.name}\r\n                    </li>)}\r\n            </ol>\r\n            <div>followers:</div>\r\n           <ol className=\"removeBullets\">\r\n                {allFollowers.map(f =>\r\n                    <li className=\"border-1\">\r\n                        {f.name}\r\n                    </li>)}\r\n            </ol>\r\n          </div>\r\n      )\r\n    \r\n    };\r\n\r\n    return (\r\n        <Router>\r\n            <ol className=\"mx-auto col-md-6 removeBullets\">\r\n                {users.map(user =>\r\n                    <li className=\"border-1 bg-light mb-4\" key={user.id}>\r\n                        <Link to={`/users/${user.id}`}>\r\n                            <div className=\"w-100 d-flex justify-content-between\"><img src={user.avatar_url}\r\n                                                                                       className=\"col-2 p-3 mr-0\"/>\r\n                                <div className=\"col-10 h5 pl-0 my-auto\">{user.login}</div>\r\n                            </div>\r\n                        </Link>\r\n                    </li>)}\r\n            </ol>\r\n            <div className=\"col-md-6\">\r\n                <Route path=\"/users/:user\" component={({match}) => (<User userid={match.params.user}/>)}/>\r\n            </div>\r\n        </Router>);\r\n};\r\n\r\nexport default Results;\r\n","export default __webpack_public_path__ + \"static/media/preloader.a6525050.gif\";","import React from 'react';\r\n\r\nconst Pagination = ({ usersPerPage, totalUsers, paginate }) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil( totalUsers /  usersPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul className='pagination'>\r\n        {pageNumbers.map(number => (\r\n          <li key={number} className='page-item'>\r\n            <a onClick={() => paginate(number)} className='page-link'>\r\n              {number}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n\r\n","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {Form, FormButton, FormGroup} from \"semantic-ui-react\";\r\nimport Results from './components/Results'\r\nimport loadingImage from './images/preloader.gif'\r\nimport axios from 'axios';\r\nimport Pagination from './components/Pagination'\r\n\r\nfunction App() {\r\n\r\n    const [userInput, setUserInput] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [users, setUsers] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [usersPerPage] = useState(3);\r\n\r\n    const handleSearch = (e) => {\r\n        setUserInput(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        setIsLoading(true);\r\n        const response = await axios(\"https://api.github.com/search/users?q=\" + userInput).catch((err) => {\r\n                setError(err);\r\n                console.log(err);\r\n            }\r\n        );\r\n        if (response) {\r\n          //  console.log('got responce, responce is');\r\n            //console.log(response.data);\r\n            setUsers(response.data.items);\r\n            setLoaded(true);\r\n          //  console.log(\"loading status\" + loaded);\r\n        }\r\n        setIsLoading(false);\r\n    };\r\n\r\n    // Get current users\r\n    const indexOfLastPost = currentPage * usersPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - usersPerPage;\r\n    const currentUsers = users.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid w-100\">\r\n                <div className=\"navbar row\">\r\n                    <p className=\"h1 mx-auto\"> Git hub user search</p>\r\n                </div>\r\n                <div className=\"search row\">\r\n                    <Form onSubmit={handleSubmit} className=\"mx-auto my-5\">\r\n                        <FormGroup>\r\n                            <Form.Input palacholder='name' name=\"name\" onChange={handleSearch} className=\"col-8\"/>\r\n                            <FormButton content=\"submit\" className=\"col-4\"/>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </div>\r\n                    {isLoading === true ? (<div className=\"row\"> <img src={loadingImage} className=\"mx-auto\"/></div>) : (<div></div>)}\r\n                <div className=\"row\">\r\n                    {loaded === true ? (<Results users={currentUsers}/>) : (<div></div>)}\r\n                </div>\r\n                <div className=\"row ml-2\">\r\n                    <Pagination\r\n                        usersPerPage={usersPerPage}\r\n                        totalUsers={users.length}\r\n                        paginate={paginate}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n;\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}